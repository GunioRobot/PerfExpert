#!/usr/bin/env bash

# Location of hpcrun, hpcstruct and hpcprof binaries 
HPCTOOLKIT_BIN=/home/ashay/apps/hpctoolkit/bin

# Event parameters to each run of hpcrun
# Remove unused experiment lines
# Each string should be of the format: --event <counter>[:frequency] --event <counter>[:frequency] ...

experiment[0]="--event PAPI_TOT_CYC:13000027 --event PAPI_TOT_INS:13000049 --event PAPI_TLB_DM:510007 --event PAPI_TLB_IM:510031"
experiment[1]="--event PAPI_TOT_CYC:13000027 --event PAPI_L1_DCA:5300003 --event PAPI_L2_DCA:1300021 --event PAPI_L2_TCM:510007"
experiment[2]="--event PAPI_TOT_CYC:13000027 --event PAPI_L1_ICA:5300003 --event PAPI_L2_ICA:1300021 --event PAPI_L2_ICM:510007"
experiment[3]="--event PAPI_TOT_CYC:13000027 --event PAPI_BR_INS:2300017 --event PAPI_BR_MSP:510007 --event L1I:CYCLES_STALLED:510031"
experiment[4]="--event PAPI_TOT_CYC:13000027 --event FP_COMP_OPS_EXE:5300003 -e L2_RQSTS:SELF_DEMAND_MESI:510007"

#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX#
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX#

######## Do not edit anything below this line ########

#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX#
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX#

# Sanity checks
if [ ${#} -lt 1 ]
then
	echo "USAGE: ${0} [--structure hpcstruct-file] program-name [arguments]"
	exit 1;
fi

hpcstruct_file="";
if [ ${1} = "--structure" ]
then
	hpcstruct_file=${2};
	if [ ${#} -lt 3 ]
	then
		echo "USAGE: ${0} [--structure hpcstruct-file] program-name [arguments]"
		exit 1;
	fi

	if [ ! -f ${hpcstruct_file} ]
	then
		echo "Could not find hpc struct file: ${hpcstruct_file}, try entering the absolute path";
		exit 1;
	fi

	shift; shift;
fi;

program_name=${1};

arguments="";
shift;
if [ "x${*}" != "x" ]
then
	arguments=${*};
fi;

if [ ! -f ${program_name} ]
then
	echo "Could not find file: ${program_name}, try entering the absolute path";
	exit 1;
fi

# Check if the output file already exists
if [ -f "experiment.xml" ]
then
	read -e -r -p "'experiment.xml' already exists. Proceeding further will overwrite this file. Continue? [Y/n] " -n 1 reply;
	if [ "${reply}" != "Y" -a "${reply}" != "y" -a "${reply}" != "" ]
	then
		exit 1;
	fi;
fi;

# Put everything into a temporary directory instead of clobbering the working directory
tempDir=`mktemp -d .perfexpert-temp-XXXXXXX`;

# Just to be sure, we remove any files which might previously exist
rm -rf ${tempDir}/*;

# Check if we received the HPCStruct file as a parameter
if [ "x${hpcstruct_file}" != "x" ]
then
	# If yes, use it
	cp ${hpcstruct_file} ${tempDir}/hpcstruct;
else
	# Else generate it
	${HPCTOOLKIT_BIN}/hpcstruct --output ${tempDir}/hpcstruct ${program_name};
fi

# Run experiments with different configurations
for index in $(seq 0 $((${#experiment[@]}-1)))
do
	cmd="${HPCTOOLKIT_BIN}/hpcrun ${experiment[${index}]} --output ${tempDir}/measurements ${program_name} ${arguments}";
	eval ${cmd};
done

${HPCTOOLKIT_BIN}/hpcprof --metric=thread --struct ${tempDir}/hpcstruct --output ${tempDir}/database ${tempDir}/measurements;

# Get the final experiment.xml here
mv ${tempDir}/database/experiment.xml .

# Clean up
rm -rf ${tempDir};
rm -f core;

echo
echo "Run the following command to analyze the measurement data:"
echo "perfexpert <threshold-between-0-and-1> experiment.xml"
